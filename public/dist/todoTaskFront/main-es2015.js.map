{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/component/header/header.component.html","./src/app/pages/login/login.component.html","./src/app/pages/not-found/not-found.component.html","./src/app/pages/register/register.component.html","./src/app/pages/task/create-task/create-task.component.html","./src/app/pages/task/view-task/view-task.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/component/header/header.component.css","./src/app/component/header/header.component.ts","./src/app/interceptor.ts","./src/app/pages/login/login.component.css","./src/app/pages/login/login.component.ts","./src/app/pages/not-found/not-found.component.css","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/register/register.component.css","./src/app/pages/register/register.component.ts","./src/app/pages/task/create-task/create-task.component.css","./src/app/pages/task/create-task/create-task.component.ts","./src/app/pages/task/view-task/view-task.component.css","./src/app/pages/task/view-task/view-task.component.ts","./src/app/service/data-service.service.ts","./src/app/service/http.service.ts","./src/app/service/modal.service.ts","./src/app/service/util.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"slim-header\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"slim-header-left\\\">\\n        <h2 class=\\\"slim-logo\\\"><a routerLink=\\\"/view-task\\\">Todo Task</a></h2>\\n      </div><!-- slim-header-left -->\\n      <div class=\\\"slim-header-right\\\">\\n  \\n        <div class=\\\"dropdown dropdown-c\\\">\\n          <a href=\\\"#\\\" class=\\\"logged-user\\\" data-toggle=\\\"dropdown\\\">\\n            <img src=\\\"/assets/img/user.png\\\" alt=\\\"profile-pic\\\">\\n            <span>{{name}}</span>\\n            <i class=\\\"fa fa-angle-down\\\"></i>\\n          </a>\\n          <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n            <nav class=\\\"nav\\\">\\n              <a routerLink=\\\"/\\\" (click)=\\\"signout()\\\" class=\\\"nav-link\\\"><i class=\\\"icon ion-forward\\\"></i> Sign Out</a>\\n            </nav>\\n          </div><!-- dropdown-menu -->\\n        </div><!-- dropdown -->\\n      </div><!-- header-right -->\\n    </div><!-- container -->\\n  </div>\\n  \\n  <div class=\\\"slim-navbar\\\">\\n    <div class=\\\"container\\\">\\n      <ul class=\\\"nav\\\">\\n  \\n        <li class=\\\"nav-item with-sub mega-dropdown\\\" >\\n          <a class=\\\"nav-link\\\">\\n            <i class=\\\"icon fa fa-bell\\\"></i>\\n            <span>Todo</span>\\n          </a>\\n          <div class=\\\"sub-item\\\">\\n            <div class=\\\"row\\\">\\n  \\n  \\n              <div class=\\\"col-lg mg-t-30 mg-lg-t-0\\\"\\n                   >\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <ul>\\n                      <li><a routerLink=\\\"/create-task\\\" >Create Todo</a></li>\\n                      <li><a routerLink=\\\"/view-task\\\" >View Todo</a></li>\\n                    </ul>\\n                  </div><!-- col -->\\n                </div><!-- row -->\\n              </div><!-- col -->\\n            </div><!-- row -->\\n          </div><!-- dropdown-menu -->\\n        </li>\\n        <li class=\\\"nav-item with-sub mega-dropdown\\\" >\\n          <a class=\\\"nav-link\\\">\\n            <i class=\\\"icon fa fa-thumbs-up\\\"></i>\\n            <span>User</span>\\n          </a>\\n          <div class=\\\"sub-item\\\">\\n            <div class=\\\"row\\\">\\n  \\n  \\n  \\n  \\n  \\n              <div class=\\\"col-lg mg-t-30 mg-lg-t-0\\\"\\n                   >\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <ul>\\n                      <li><a routerLink=\\\"/create-user\\\" >Create User</a>\\n                      </li>\\n                      <li><a routerLink=\\\"/view-user\\\" >View User</a></li>\\n                    </ul>\\n                  </div><!-- col -->\\n                </div><!-- row -->\\n              </div><!-- col -->\\n            </div><!-- row -->\\n  \\n          </div><!-- dropdown-menu -->\\n        </li>\\n      </ul>\\n    </div><!-- container -->\\n  </div>\\n  \\n  \"","module.exports = \"<div  style=\\\"width:800px; margin:0 auto;\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"col-lg-12\\\">\\n      \\n          <div>\\n            <h3 class=\\\"signin-title-secondary text-center\\\">Sign in to continue.</h3>\\n            <form [formGroup]=\\\"loginForm\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"this.loginForm.controls['loginId']\\\" class=\\\"form-control\\\"\\n                       [class]=\\\"!(this.loginForm.controls['loginId'] && this.loginForm.controls['loginId'].invalid && (this.loginForm.controls['loginId'].dirty || this.loginForm.controls['loginId'].touched))?'form-control':'form-control is-invalid'\\\"\\n                       placeholder=\\\"Enter your username\\\" formControlName=\\\"loginId\\\">\\n                <small class=\\\"form-text text-muted invalid-data\\\"\\n                       *ngIf=\\\"loginForm.controls['loginId'].invalid && (loginForm.controls['loginId'].dirty || loginForm.controls['loginId'].touched)\\\"\\n                       class=\\\"invalid-data\\\">\\n                  Please enter username\\n                </small>\\n              </div><!-- form-group -->\\n              <div class=\\\"form-group mg-b-20\\\">\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\"\\n                       [class]=\\\"!(this.loginForm.controls['password'] && this.loginForm.controls['password'].invalid && (this.loginForm.controls['password'].dirty || this.loginForm.controls['password'].touched))?'form-control':'form-control is-invalid'\\\"\\n                       placeholder=\\\"Enter your password\\\">\\n                <small class=\\\"form-text text-muted invalid-data\\\"\\n                       *ngIf=\\\"loginForm.controls['password'].invalid && (loginForm.controls['password'].dirty || loginForm.controls['password'].touched)\\\"\\n                       class=\\\"invalid-data\\\">\\n                  Please enter password\\n                </small>\\n              </div><!-- form-group -->\\n              <button class=\\\"btn btn-primary btn-block btn-signin\\\" type=\\\"submit\\\" (click)=\\\"login(this.loginForm.value)\\\"\\n                      [disabled]=\\\"!loginForm.valid\\\">Sign In\\n              </button>\\n              <p class=\\\"mg-b-0\\\" style=\\\"text-align: center\\\">Didn't have account? <a [routerLink]=\\\"'/register'\\\">Create\\n                account</a></p>\\n            </form>\\n          </div>\\n      \\n        </div><!-- signin-right -->\\n      </div><!-- d-flex -->\\n      \\n</div>\\n\\n\"","module.exports = \"<div class=\\\"page-error-wrapper\\\">\\n    <div>\\n      <h1 class=\\\"error-title\\\">404</h1>\\n      <h5 class=\\\"tx-sm-24 tx-normal\\\">Oops. The page you were looking for doesn't exist.</h5>\\n      <p class=\\\"mg-b-50\\\">You may have mistyped the address or the page may have moved.</p>\\n      <p class=\\\"mg-b-50\\\"><a routerLink=\\\"/\\\" class=\\\"btn btn-error\\\">Back to Home</a></p>\\n    </div>\\n  \\n  </div>\\n  \"","module.exports = \"\\n<div class=\\\"page-content\\\">\\n  <div class=\\\"container\\\">\\n    <!-- page heading -->\\n    <div class=\\\"slim-pageheader\\\">\\n      <ol class=\\\"breadcrumb slim-breadcrumb\\\">\\n      </ol>\\n      <h6 class=\\\"slim-pagetitle\\\">Register User</h6>\\n    </div>\\n    <!--page heading end here -->\\n\\n    <!-- form card start -->\\n    <div class=\\\"section-wrapper container\\\">\\n\\n      <!-- form starts here -->\\n      <div class=\\\"form-layout\\\" [formGroup]='userCreateForm'>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"form-control-label\\\">Name: <span class=\\\"tx-danger\\\">*</span></label>\\n              <input class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName='name' name='name' type=\\\"text\\\">\\n              <small class=\\\"form-text text-muted invalid-data\\\"\\n                     *ngIf=\\\"userCreateForm.controls['name'].invalid && (userCreateForm.controls['name'].dirty || userCreateForm.controls['name'].touched)\\\"\\n                     class=\\\"invalid-data\\\">\\n                Please enter valid name\\n              </small>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"form-control-label\\\">Login Id: <span class=\\\"tx-danger\\\">*</span></label>\\n              <input class=\\\"form-control\\\" placeholder=\\\"Login id\\\" formControlName='loginId' name='loginId' type=\\\"text\\\">\\n              <small class=\\\"form-text text-muted invalid-data\\\"\\n                     *ngIf=\\\"userCreateForm.controls['loginId'].invalid && (userCreateForm.controls['loginId'].dirty || userCreateForm.controls['loginId'].touched)\\\"\\n                     class=\\\"invalid-data\\\">\\n                Please enter valid loginId\\n              </small>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"form-control-label\\\">Password: <span class=\\\"tx-danger\\\">*</span></label>\\n              <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName='password' name='password'\\n                     type=\\\"password\\\">\\n              <small class=\\\"form-text text-muted invalid-data\\\"\\n                     *ngIf=\\\"userCreateForm.controls['password'].invalid && (userCreateForm.controls['password'].dirty || userCreateForm.controls['password'].touched)\\\"\\n                     class=\\\"invalid-data\\\">\\n                Please enter valid password\\n              </small>\\n\\n              <small class=\\\"form-text text-muted invalid-data\\\" *ngIf=\\\"userCreateForm.get('password').hasError('pattern')\\\"\\n                class=\\\"invalid-data\\\">\\n                Password should minimum 8 characters, lowercase, uppercase, numbers.\\n              </small>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"form-control-label\\\">Is Active: <span class=\\\"tx-danger\\\">*</span></label>\\n              <select class=\\\"form-control\\\" formControlName='isActive' name='isActive'>\\n                <option value=''>select is Active</option>\\n                <option value=\\\"true\\\">Yes</option>\\n                <option value=\\\"false\\\">No</option>\\n              </select>\\n              <small class=\\\"form-text text-muted invalid-data\\\"\\n                     *ngIf=\\\"userCreateForm.controls['isActive'].invalid && (userCreateForm.controls['isActive'].dirty || userCreateForm.controls['isActive'].touched)\\\"\\n                     class=\\\"invalid-data\\\">\\n                Please select valid isActive\\n              </small>\\n            </div>\\n          </div>\\n\\n          <!-- form end here -->\\n        </div>\\n        <!-- form card end -->\\n      </div>\\n      <div class=\\\"form-layout-footer\\\">\\n        <button class=\\\"btn btn-secondary bd-0\\\" routerLink=\\\"/user-view\\\">Cancel</button>\\n        <button class=\\\"btn btn-primary bd-0\\\" (click)='userCreate(userCreateForm.value)'>Create User</button>\\n      </div>\\n    </div>\\n\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"page-content\\\">\\n  <div class=\\\"container\\\">\\n    <!-- page heading -->\\n    <div class=\\\"slim-pageheader\\\">\\n      <ol class=\\\"breadcrumb slim-breadcrumb\\\">\\n      </ol>\\n      <h6 class=\\\"slim-pagetitle\\\">Create Todo</h6>\\n    </div>\\n    <!--page heading end here -->\\n\\n    <!-- form card start -->\\n    <div class=\\\"section-wrapper container\\\">\\n\\n      <!-- form starts here -->\\n      <div class=\\\"form-layout\\\" [formGroup]='todoCreateForm'>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"form-control-label\\\">Name: <span class=\\\"tx-danger\\\">*</span></label>\\n              <input class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName='name' name='name' type=\\\"text\\\">\\n              <small class=\\\"form-text text-muted invalid-data\\\"\\n                *ngIf=\\\"todoCreateForm.controls['name'].invalid && (todoCreateForm.controls['name'].dirty || todoCreateForm.controls['name'].touched)\\\"\\n                class=\\\"invalid-data\\\">\\n                Please enter valid name\\n              </small>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Expiry Date: <span class=\\\"tx-danger\\\">*</span></label>\\n              <input class=\\\"form-control\\\" ngbDatepicker (click)=\\\"datePicker1.toggle()\\\" #datePicker1=\\\"ngbDatepicker\\\"\\n                     formControlName=\\\"expiryDate\\\" placeholder=\\\"yyyy-mm-dd\\\">\\n              <small class=\\\"form-text text-muted invalid-data\\\"\\n                     *ngIf=\\\"todoCreateForm.controls['expiryDate'].invalid && (todoCreateForm.controls['expiryDate'].dirty || todoCreateForm.controls['expiryDate'].touched)\\\"\\n                     class=\\\"invalid-data\\\">\\n                Please enter valid start date\\n              </small>\\n            </div>\\n          </div>\\n          <!-- form end here -->\\n        </div>\\n        <!-- form card end -->\\n      </div>\\n      <div class=\\\"form-layout-footer\\\">\\n        <button class=\\\"btn btn-secondary bd-0\\\" routerLink=\\\"/view-task\\\">Cancel</button>\\n        <button class=\\\"btn btn-primary bd-0\\\" (click)='createTodo(todoCreateForm.value)'>Create Todo</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n<app-header></app-header>\\n<div class=\\\"page-content\\\">\\n  <div class=\\\"container\\\">\\n    <!-- page heading -->\\n    <div class=\\\"slim-pageheader\\\">\\n      <ol class=\\\"breadcrumb slim-breadcrumb\\\">\\n      </ol>\\n      <h6 class=\\\"slim-pagetitle\\\">Todo List</h6>\\n    </div>\\n    <!--page heading end here -->\\n\\n    <!-- table data for view -->\\n\\n    <div class=\\\"file-item\\\" style=\\\"height: unset\\\">\\n      <table class=\\\"table\\\">\\n        <thead>\\n        <tr>\\n          <th>Name</th>\\n          <th>Expiry Date</th>\\n          <th>Status</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let todo of todos\\\">\\n          <td>\\n\\n            {{todo.name}}\\n          </td>\\n          <td>\\n            {{todo.expiryDate | date: \\\"mediumDate\\\"}}\\n          </td>\\n          <td>\\n            {{todo.status}}\\n          </td>\\n\\n\\n        </tr>\\n\\n        </tbody>\\n      </table>\\n    </div><!-- file-item -->\\n    <!-- table end-->\\n\\n    <div class=\\\"table-pagination-block\\\" *ngIf=\\\"todos.length > 0\\\">\\n        <div class=\\\"row\\\">            \\n          <div class=\\\"col-md-12\\\">\\n              <div>\\n                  <ngb-pagination id=\\\"paginate\\\" class=\\\"d-flex justify-content-end\\\" [collectionSize]=\\\"pagination.total\\\"\\n                      [(page)]=\\\"pagination.offset\\\" [rotate]=\\\"true\\\" [maxSize]=\\\"pagination.maxsize\\\" [boundaryLinks]=\\\"true\\\"\\n                      size=\\\"sm\\\" (pageChange)=\\\"pageChange(pagination.offset)\\\">\\n                  </ngb-pagination>\\n              </div>\\n          </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"table-pagination-block\\\" *ngIf=\\\"todos.length === 0\\\">\\n        <div class=\\\"row\\\">            \\n          <div class=\\\"col-md-12\\\">\\n              <div>\\n                <h3 class=\\\"signin-title-secondary text-center\\\">No Task found</h3>\\n              </div>\\n          </div>\\n        </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './pages/login/login.component';\nimport {NotFoundComponent} from './pages/not-found/not-found.component';\nimport {RegisterComponent} from './pages/register/register.component';\nimport {ViewTaskComponent} from './pages/task/view-task/view-task.component';\nimport {CreateTaskComponent} from './pages/task/create-task/create-task.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: LoginComponent\n}, {\n  path: 'login',\n  component: LoginComponent,\n}, {\n  path: 'register',\n  component: RegisterComponent,\n}, {\n  path: 'view-task',\n  component: ViewTaskComponent,\n}, {\n  path: 'create-task',\n  component: CreateTaskComponent,\n}, {\n  path: '**',\n  component: NotFoundComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todoTaskFront';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {NgbDatepickerModule, NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { ViewTaskComponent } from './pages/task/view-task/view-task.component';\nimport { HeaderComponent } from './component/header/header.component';\nimport {HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {Interceptor} from './interceptor';\nimport { CreateTaskComponent } from './pages/task/create-task/create-task.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ViewTaskComponent,\n    HeaderComponent,\n    CreateTaskComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbDatepickerModule,\n    NgbModule\n  ],\n  providers: [{ \n    provide: HTTP_INTERCEPTORS,\n    useClass: Interceptor,\n    multi: true\n  },\n{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UtilService} from '../../service/util.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  name = '';\n  access;\n  modules = [];\n\n  constructor(public router: Router, public util: UtilService,) {\n    try {\n      this.name = this.util.getJson('name')['name'];\n    } catch (e) {\n      sessionStorage.clear();\n      localStorage.clear();\n      // this.router.navigateByUrl('/login');\n    }\n\n  }\n  ngOnInit() {\n  }\n\n  signout() {\n    localStorage.clear();\n    sessionStorage.clear();\n    this.router.navigateByUrl('/login');\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse,HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/do';\nimport {UtilService} from './service/util.service';\n\n\n@Injectable()\nexport class Interceptor implements HttpInterceptor{\n\n    token : any= '';\n\n    constructor(private router:Router,public util: UtilService) { }\n    \n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\t\tif(localStorage.getItem('token') != \"\") {\n            this.token = this.util.getText('token');\n\t\t} if(this.token) {\n\t\t\treq = req.clone({ \n\t\t\t\theaders: req.headers.set(\"x-auth-token\", this.token)\n            });\n\t\t}\n\n\t\treturn next.handle(req)\n            .do((event: HttpEvent<any>) => {                \n            }, (err: any) => {\n\t\t\t\tif (err instanceof HttpErrorResponse) {\n\t\t\t\t\tif (err.status === 403 ) {\n\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\tthis.router.navigate(['login']);\n\t\t\t\t\t}\n\t\t\t\t}\n            });\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {HttpService} from '../../service/http.service';\nimport {UtilService} from '../../service/util.service';\nimport {ModalService} from '../../service/modal.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, public util: UtilService,\n              public modal: ModalService,\n              public httpService: HttpService, public route: Router) {\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      loginId: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  \n  login(data) {\n    console.log('login form');\n    console.log(data);\n    this.httpService.postApi(data, 'auth/login').subscribe((res) => {\n      console.log({res});\n\n      if (res.success) {\n        this.util.storeText('userId', res.data.userId);\n        this.util.storeText('token', res.data.token);\n        this.util.storeJson('name', {'name': res.data.name});\n        console.log('res.message');\n        this.route.navigate(['/view-task']);\n        console.log(`res.messagesdfasd`);\n      } else {\n        console.log(res.message);\n        this.modal.showModal({\n          'success': false,\n          'message': res.message\n        });\n      }\n    }, err => {\n\n      this.modal.showModal({\n        'success': false,\n        'message': 'Something went wrong. Please try again'\n      });\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","\nimport {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {HttpService} from '../../service/http.service';\nimport {ModalService} from '../../service/modal.service';\nimport {Router} from '@angular/router';\nimport {DataServiceService} from '../../service/data-service.service';\nimport {UtilService} from '../../service/util.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  userCreateForm: FormGroup;\n  validator = Validators.email;\n\n\n  constructor(private formBuilder: FormBuilder,\n              public modal: ModalService,\n              public router: Router,\n              public util: UtilService,\n              public dataService: DataServiceService,\n              public httpService: HttpService) {\n    \n  }\n\n  ngOnInit() {\n    this.userCreateForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      loginId: ['', Validators.email],\n      password: ['', [Validators.required, Validators.pattern('(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,30}')]],\n      isActive: ['', Validators.required]\n\n    });\n  }\n\n  \n  userCreate(data) {\n    this.httpService.postApi(data, 'user/registerUser').subscribe(res => {\n      if (res.success) {\n        this.router.navigateByUrl('/login');\n      } else {\n        this.modal.showModal({'success': false, 'message': 'Something went wrong. Please try again'});\n      }\n    }, err => {\n\n      this.modal.showModal({'success': false, 'message': 'Something went wrong. Please try again'})\n    });\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Rhc2svY3JlYXRlLXRhc2svY3JlYXRlLXRhc2suY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {HttpService} from '../../../service/http.service';\nimport {Router} from '@angular/router';\nimport {DataServiceService} from '../../../service/data-service.service';\nimport {UtilService} from '../../../service/util.service';\nimport {ModalService} from '../../../service/modal.service';\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit {\n  todoCreateForm: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n    public dataService: DataServiceService,\n    public util: UtilService,\n    public modal: ModalService,\n    public httpService: HttpService, public route: Router) { }\n\n  ngOnInit() {\n    this.todoCreateForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      expiryDate:['', Validators.required]\n    });\n  }\n  formatDate(date) {\n    var \n        month = '' + date.month,\n        day = '' + date.day,\n        year = date.year;\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n  createTodo(data) {\n      data.expiryDate = this.formatDate(data.expiryDate);\n      data.status = 'New';\n      data.users = [this.dataService.getUserId()];\n      this.httpService.postApi(data, 'todo/createTodo').subscribe((res) => {\n        console.log(res);\n        if (res.success) {\n          this.route.navigate(['/view-task']);\n        } else {\n          this.modal.showModal({'success': false, 'message': res['message']});\n        }\n      }, err => {\n        this.modal.showModal({'success': false, 'message': 'Something went wrong. Please try again'});\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Rhc2svdmlldy10YXNrL3ZpZXctdGFzay5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../../service/http.service';\nimport {Router} from '@angular/router';\nimport {ModalService} from '../../../service/modal.service';\nimport {UtilService} from '../../../service/util.service';\nimport {DataServiceService} from '../../../service/data-service.service';\n\n\n@Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css']\n})\nexport class ViewTaskComponent implements OnInit {\n\n  todos = []\n  pagination: any = {\n    limit: 10,\n    offset: 1,\n    total: 0,\n    maxsize: 1,\n    filter: {}\n};\n  constructor(public httpService: HttpService,\n    public modal: ModalService,\n    public dataService: DataServiceService,\n    public util: UtilService,\n    public router: Router) { }\n\n  ngOnInit() {\n    this.pagination.offset = 0;\n    this.pagination.filter.users = this.dataService.getUserId();\n    this.httpService.postApi(this.pagination, 'todo/getTodoCondition').subscribe(res => {\n      this.todos = res['data'];\n      this.pagination.total = res['count'];\n    });\n  }\n\n  pageChange(pageNo){\n    this.pagination.offset = pageNo - 1;\n    this.pagination.filter.users = this.dataService.getUserId();\n    this.httpService.postApi(this.pagination, 'todo/getTodoCondition').subscribe(res => {\n      this.todos = res['data'];\n      this.pagination.total = res['count'];\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {UtilService} from './util.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private messageSource = new BehaviorSubject('default message');\n  currentMessage = this.messageSource.asObservable();\n\n  constructor(public util: UtilService) {\n  }\n\n  isAuthenticated() {\n    return sessionStorage.getItem('userId') ? true : false;\n  }\n\n  getUserId() {\n    return this.util.getText('userId');\n  }\n\n  getToken() {\n\n    return this.util.getText('token');\n  }\n\n\n  changeMessage(message: string) {\n    this.messageSource.next(message);\n  }\n}\n","\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  serverUrl = 'http://localhost:3214/';\n\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n  };\n\n  constructor(private http: HttpClient) {\n  }\n\n  getApi(url: any) {\n    return this.http.get<any[]>(this.serverUrl + url).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  postApi(json: any, url) {\n    return this.http.post<any>(this.serverUrl + url, json, this.httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  putApi(json: any, url) {\n    return this.http.put<any>(this.serverUrl + url, json, this.httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.error({error});\n    let errorMessage = {};\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = {message: error.error.message};\n    } else {\n      // server-side error\n      errorMessage = {code: error.status, message: error.error.message};\n    }\n    return throwError(errorMessage);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {DataServiceService} from './data-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(public dataService: DataServiceService) {\n  }\n\n  showModal = (json) => {\n    json['type'] = 'modal';\n    this.dataService.changeMessage(JSON.stringify(json));\n  };\n\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {Router} from '@angular/router';\nimport SimpleCrypto from 'simple-crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  simpleCrypto = new SimpleCrypto('vijay');\n\n  constructor(private _location: Location, public router: Router) {\n  }\n\n  storeText = (key, value) => {\n\n    sessionStorage.setItem(key, this.encryptData(value));\n  };\n\n  storeJson = (key, value) => {\n    sessionStorage.setItem(key, this.encryptData(JSON.stringify(value)));\n  };\n\n  getText = (key) => {\n    if (!this.checkUserDataExist()) {\n      this.router.navigateByUrl('/login');\n    }\n    return this.decryptData(sessionStorage.getItem(key));\n  };\n\n  getJson = (key) => {\n    if (!this.checkUserDataExist()) {\n      this.router.navigateByUrl('/login');\n    }\n    return JSON.parse(this.decryptData(sessionStorage.getItem(key)) + '');\n  };\n\n  encryptData = (data) => {\n    try {\n      return this.simpleCrypto.encrypt(data);\n    } catch (e) {\n      this.router.navigateByUrl('/login');\n    }\n\n  };\n\n  decryptData = (data) => {\n    try {\n      return this.simpleCrypto.decrypt(data);\n    } catch (e) {\n      this.router.navigateByUrl('/login');\n    }\n  };\n\n  backClicked = () => {\n    this._location.back();\n  };\n\n  isObject(item) {\n    return (typeof item === 'object' && !Array.isArray(item) && item !== null);\n  }\n\n  checkNull(data) {\n    if (!data || typeof data == undefined) {\n      return true;\n    }\n    return false;\n  }\n\n  checkUserDataExist() {\n    if (sessionStorage.getItem('userId') === null ||\n      sessionStorage.getItem('token') === null ||\n      sessionStorage.getItem('name') === null\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  enableFromValidation(form) {\n    Object.keys(form.controls).forEach(field => {\n      const control = form.get(field);\n      control.markAsTouched({onlySelf: true});\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}